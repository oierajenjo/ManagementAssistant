//Funciones de uso habitual en eSTILA

function isIE () {
  var myNav = navigator.userAgent.toLowerCase();
  return (myNav.indexOf('msie') != -1) ? parseInt(myNav.split('msie')[1]) : false;
}

// INI: IndexOf
// En IE < 9 no hay soporte para la función IndexOf con este código
// se simula su comportamiento para esos navegadores
function selaeIndexOf(stringElement, searchElement) {
    var i,
        pivot = 0,
        length;

    length = stringElement.length;

    if (length === 0 || pivot >= length) {
      return -1;
    }

    if (pivot < 0) {
      pivot = length - Math.abs(pivot);
    }

    for (i = pivot; i < length; i++) {
      if (stringElement[i] === searchElement) {
        return i;
      }
    }
    return -1;
}

// FIN: IndexOf

function htmlentities (string, quote_style) {
    // http://kevin.vanzonneveld.net
    // +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
    // +    revised by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
    // +   improved by: nobbler
    // +    tweaked by: Jack
    // +   bugfixed by: Onno Marsman
    // +    revised by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
    // +    bugfixed by: Brett Zamir (http://brett-zamir.me)
    // +      input by: Ratheous
    // -    depends on: get_html_translation_table
    // *     example 1: htmlentities('Kevin & van Zonneveld');
    // *     returns 1: 'Kevin &amp; van Zonneveld'
    // *     example 2: htmlentities("foo'bar","ENT_QUOTES");
    // *     returns 2: 'foo&#039;bar'

    var hash_map = {}, symbol = '', tmp_str = '', entity = '';
    tmp_str = string.toString();
    
    if (false === (hash_map = this.get_html_translation_table('HTML_ENTITIES', quote_style))) {
        return false;
    }
    hash_map["'"] = '&#039;';
    for (symbol in hash_map) {
        entity = hash_map[symbol];
        tmp_str = tmp_str.split(symbol).join(entity);
    }
    
    return tmp_str;
}

function get_html_translation_table (table, quote_style) {
    // http://kevin.vanzonneveld.net
    // +   original by: Philip Peterson
    // +    revised by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
    // +   bugfixed by: noname
    // +   bugfixed by: Alex
    // +   bugfixed by: Marco
    // +   bugfixed by: madipta
    // +   improved by: KELAN
    // +   improved by: Brett Zamir (http://brett-zamir.me)
    // +   bugfixed by: Brett Zamir (http://brett-zamir.me)
    // +      input by: Frank Forte
    // +   bugfixed by: T.Wild
    // +      input by: Ratheous
    // %          note: It has been decided that we're not going to add global
    // %          note: dependencies to php.js, meaning the constants are not
    // %          note: real constants, but strings instead. Integers are also supported if someone
    // %          note: chooses to create the constants themselves.
    // *     example 1: get_html_translation_table('HTML_SPECIALCHARS');
    // *     returns 1: {'"': '&quot;', '&': '&amp;', '<': '&lt;', '>': '&gt;'}
    
    var entities = {}, hash_map = {}, decimal = 0, symbol = '';
    var constMappingTable = {}, constMappingQuoteStyle = {};
    var useTable = {}, useQuoteStyle = {};
    
    // Translate arguments
    constMappingTable[0]      = 'HTML_SPECIALCHARS';
    constMappingTable[1]      = 'HTML_ENTITIES';
    constMappingQuoteStyle[0] = 'ENT_NOQUOTES';
    constMappingQuoteStyle[2] = 'ENT_COMPAT';
    constMappingQuoteStyle[3] = 'ENT_QUOTES';

    useTable       = !isNaN(table) ? constMappingTable[table] : table ? table.toUpperCase() : 'HTML_SPECIALCHARS';
    useQuoteStyle = !isNaN(quote_style) ? constMappingQuoteStyle[quote_style] : quote_style ? quote_style.toUpperCase() : 'ENT_COMPAT';

    if (useTable !== 'HTML_SPECIALCHARS' && useTable !== 'HTML_ENTITIES') {
        throw new Error("Table: "+useTable+' not supported');
        // return false;
    }

    entities['38'] = '&amp;';
    if (useTable === 'HTML_ENTITIES') {
        entities['160'] = '&nbsp;';
        entities['161'] = '&iexcl;';
        entities['162'] = '&cent;';
        entities['163'] = '&pound;';
        entities['164'] = '&curren;';
        entities['165'] = '&yen;';
        entities['166'] = '&brvbar;';
        entities['167'] = '&sect;';
        entities['168'] = '&uml;';
        entities['169'] = '&copy;';
        entities['170'] = '&ordf;';
        entities['171'] = '&laquo;';
        entities['172'] = '&not;';
        entities['173'] = '&shy;';
        entities['174'] = '&reg;';
        entities['175'] = '&macr;';
        entities['176'] = '&deg;';
        entities['177'] = '&plusmn;';
        entities['178'] = '&sup2;';
        entities['179'] = '&sup3;';
        entities['180'] = '&acute;';
        entities['181'] = '&micro;';
        entities['182'] = '&para;';
        entities['183'] = '&middot;';
        entities['184'] = '&cedil;';
        entities['185'] = '&sup1;';
        entities['186'] = '&ordm;';
        entities['187'] = '&raquo;';
        entities['188'] = '&frac14;';
        entities['189'] = '&frac12;';
        entities['190'] = '&frac34;';
        entities['191'] = '&iquest;';
        entities['192'] = '&Agrave;';
        entities['193'] = '&Aacute;';
        entities['194'] = '&Acirc;';
        entities['195'] = '&Atilde;';
        entities['196'] = '&Auml;';
        entities['197'] = '&Aring;';
        entities['198'] = '&AElig;';
        entities['199'] = '&Ccedil;';
        entities['200'] = '&Egrave;';
        entities['201'] = '&Eacute;';
        entities['202'] = '&Ecirc;';
        entities['203'] = '&Euml;';
        entities['204'] = '&Igrave;';
        entities['205'] = '&Iacute;';
        entities['206'] = '&Icirc;';
        entities['207'] = '&Iuml;';
        entities['208'] = '&ETH;';
        entities['209'] = '&Ntilde;';
        entities['210'] = '&Ograve;';
        entities['211'] = '&Oacute;';
        entities['212'] = '&Ocirc;';
        entities['213'] = '&Otilde;';
        entities['214'] = '&Ouml;';
        entities['215'] = '&times;';
        entities['216'] = '&Oslash;';
        entities['217'] = '&Ugrave;';
        entities['218'] = '&Uacute;';
        entities['219'] = '&Ucirc;';
        entities['220'] = '&Uuml;';
        entities['221'] = '&Yacute;';
        entities['222'] = '&THORN;';
        entities['223'] = '&szlig;';
        entities['224'] = '&agrave;';
        entities['225'] = '&aacute;';
        entities['226'] = '&acirc;';
        entities['227'] = '&atilde;';
        entities['228'] = '&auml;';
        entities['229'] = '&aring;';
        entities['230'] = '&aelig;';
        entities['231'] = '&ccedil;';
        entities['232'] = '&egrave;';
        entities['233'] = '&eacute;';
        entities['234'] = '&ecirc;';
        entities['235'] = '&euml;';
        entities['236'] = '&igrave;';
        entities['237'] = '&iacute;';
        entities['238'] = '&icirc;';
        entities['239'] = '&iuml;';
        entities['240'] = '&eth;';
        entities['241'] = '&ntilde;';
        entities['242'] = '&ograve;';
        entities['243'] = '&oacute;';
        entities['244'] = '&ocirc;';
        entities['245'] = '&otilde;';
        entities['246'] = '&ouml;';
        entities['247'] = '&divide;';
        entities['248'] = '&oslash;';
        entities['249'] = '&ugrave;';
        entities['250'] = '&uacute;';
        entities['251'] = '&ucirc;';
        entities['252'] = '&uuml;';
        entities['253'] = '&yacute;';
        entities['254'] = '&thorn;';
        entities['255'] = '&yuml;';
    }

    if (useQuoteStyle !== 'ENT_NOQUOTES') {
        entities['34'] = '&quot;';
    }
    if (useQuoteStyle === 'ENT_QUOTES') {
        entities['39'] = '&#39;';
    }
    entities['60'] = '&lt;';
    entities['62'] = '&gt;';


    // ascii decimals to real symbols
    for (decimal in entities) {
        symbol = String.fromCharCode(decimal);
        hash_map[symbol] = entities[decimal];
    }
    
    return hash_map;
}


function limitText(limitField, limitNum) {
 if (limitField.value.length > limitNum) {
  limitField.value = limitField.value.substring(0, limitNum);
 } 
}
//FUNCIONES Y PROCEDIMIENTOS COMUNES EN LOS PORTLET's
//busca caracteres que no sean espacio en blanco en una cadena
function vacio(q) {
        for ( i = 0; i < q.length; i++ ) {
                if ( q.charAt(i) != " " ) {
                        return false
                }
        }
        return true
}
//funcion que devuelve true si el parametro pasado es un numero y 
//false en caso contrario
function IsNum( numstr ) {
// Indica si un número es un entero válido. 
var isValid = true;
if (numstr+"" == "undefined" || numstr+"" == "null" || numstr+"" == "") 
return false; 
// convertir a string para poder realizar comparaciones de string. 
numstr += ""; 
for (i = 0; i < numstr.length; i++) {
  if (!((numstr.charAt(i) >= "0") && (numstr.charAt(i) <= "9") )) {
  isValid = false;
  break;
  } 
} // END for 
return isValid;
}

//comprueba que la longitud del valor del campo se corresponda con el 
//valor del parametro longitud
function Longitud(valorcampo, longitud) {
 var longitudCampo = valorcampo.length;
var correcto = true;
if (longitudCampo != longitud) {
   correcto = false;
}
return correcto;
} 

//Elimina espacios en blanco por delante y por detras
function trim(stringToTrim) {
	return stringToTrim.replace(/^\s+|\s+$/g,"");
}
//Elimina espacios en blanco por delante
function ltrim(stringToTrim) {
	return stringToTrim.replace(/^\s+/,"");
}
//Elimina espacios en blanco por detras
function rtrim(stringToTrim) {
	return stringToTrim.replace(/\s+$/,"");
}

//Elimina los carateres que se indiquen por delante y por detras de la cadena
function trimchar(str, chars) {
	return ltrim(rtrim(str, chars), chars);
}

//Elimina los carateres que se indiquen por delante de la cadena
function ltrimchar(str, chars) {
	chars = chars || "\\s";
	return str.replace(new RegExp("^[" + chars + "]+", "g"), "");
}

//Elimina los carateres que se indiquen por detras de la cadena
function rtrimchar(str, chars) {
	chars = chars || "\\s";
	return str.replace(new RegExp("[" + chars + "]+$", "g"), "");
}

// ************************************************************************************************
// getParam: Funcion Para obtener el valor de un parametro de una URL
// ************************************************************************************************
// http://7php.com/javascript-using-jquery-to-find-url-querystring-or-url-params-a-simple-yet-effective-approach/
/**
 * @author  : K_Wasseem
 * @URL     : http://7php.com
 * @license : FREE (like free air)
 * @optional: I'll appreciate a link back from your site if you do refer to my article ;)
 */

function getParam(key)
{
    //get querystring(s) without the ?
    var urlParams = decodeURI( window.location.search.substring(1) ); //MySideNOTE: do not use unescape() for URI, use decodeURI()

    //if no querystring, return null
    if(urlParams == false | urlParams == '') return null;

    //get key/value pairs
    var pairs = urlParams.split("&");

    var keyValue_Collection = {};
    for(var value in pairs)
    {
        //let's get the position of the first occurrence of "=", in case value has "=" in it
        if (isIE () < 9) {
            var equalsignPosition = selaeIndexOf(pairs[value],"=");
        } else {
            var equalsignPosition = pairs[value].indexOf("="); // <-- No funciona en IE8 o <
        }
        if (equalsignPosition == -1) //in case there's only the key, e.g: http://7php.com/?niche
            keyValue_Collection[ pairs[value] ] = ''; //you could change the value to true as per your needs
        else
            keyValue_Collection[ pairs[value].substring(0, equalsignPosition) ] = pairs[value].substr(equalsignPosition + 1);
    }
    return keyValue_Collection[key];
};

// ************************************************************************************************
// getParams: Funcion Para obtener un objeto con los pares parametro/valor de una URL
// ************************************************************************************************
// Más eficiente que el anterior porque si en una página tenemos que recuperar varios parametros el
// parsing y asignacion de la URL se hace una sola vez 
/**
 * @author  : IFA
 * @based on: basada en getParam de K_Wasseem
 */

function getParams()
{
    //get querystring(s) without the ?
    var urlParams = decodeURI( window.location.search.substring(1) ); //MySideNOTE: do not use unescape() for URI, use decodeURI()

    //if no querystring, return null
    if(urlParams == false | urlParams == '') return null;

    //get key/value pairs
    var pairs = urlParams.split("&");

    var keyValue_Collection = {};
    for(var value in pairs)
    {
        //let's get the position of the first occurrence of "=", in case value has "=" in it
        if (isIE () < 9) {
            var equalsignPosition = selaeIndexOf(pairs[value],"=");
        } else {
            var equalsignPosition = pairs[value].indexOf("="); // <-- No funciona en IE8 o <
        }
        
        if (equalsignPosition == -1) //in case there's only the key, e.g: http://7php.com/?niche
            keyValue_Collection[ pairs[value] ] = ''; //you could change the value to true as per your needs
        else
            keyValue_Collection[ pairs[value].substring(0, equalsignPosition) ] = pairs[value].substr(equalsignPosition + 1);
    }
    return keyValue_Collection;
};

// INICIO PROCESOS COMUNES DEL FILTRO SEMANA
// ************************************************************************************************
// mostrar_semana_agno: Funcion que muestra la informacion de la semana_agno pasada como parametro
// ************************************************************************************************
/**
 * @author  : GVG
 */
function mostrar_semana_agno (semana_agno){

    var re3 = /&pp_semana_agno=[0-9/%]*/g  
    var nueva_url
    var location_search3


    //Almacenamos la primera parte de la URL
    nueva_url = location.href.substring(0, location.href.indexOf(location.search,0))   

    if (location.search.match(re3)) {
	 //La URL ya contenia pp_semana_agno
	 location_search3 = location.search.replace(re3, '&pp_semana_agno=' + semana_agno)
    }
    else
    {
	 location_search3 = location.search + '&pp_semana_agno=' + semana_agno
    }

    nueva_url = nueva_url + location_search3
    window.location.replace(nueva_url)
    return true
}
// FIN PROCESOS COMUNES DEL FILTRO SEMANA

// INICIO PROCESOS COMUNES DEL FILTRO AGENTE, RECEPTOR, DELEGACION
// ************************************************************************************************
// Establece el Filtro seleccionado
// ************************************************************************************************
/**
 * @author  : JAS
 */
function selectTipoFiltro() {

   // Cuando se cambia la opción de filtro es posible que haya mas dígitos de los 
   // que se permiten, así que los elimino.
   limitText(document.getElementById("ITentradaNumero"));


  // Si el tipo es Delegacion sustituimos el InpuText por un Select
  // y viceversa 
  actualIndex = document.getElementById("selTipoFiltro").selectedIndex
  var InputText5InnerHTML = '<input type="text" name="entradaNumero" id="ITentradaNumero" maxlength="5" size="6" onKeyDown="limitText(this);" onKeyUp="limitText(this);" class="campoentrada text" />'
  var InputText6InnerHTML = '<input type="text" name="entradaNumero" id="ITentradaNumero" maxlength="6" size="6" onKeyDown="limitText(this);" onKeyUp="limitText(this);" class="campoentrada text" />'
  var SelectInnerHTML = new String()
  var valorInputText
  if (actualIndex == 2) {
    //Seleccionado Delegacion
    SelectInnerHTML = document.getElementById("spanDelegacion").innerHTML
    SelectInnerHTML = SelectInnerHTML.replace("selectDelegacion","ITentradaNumero")
    document.getElementById("SPANentradaDato").innerHTML =  SelectInnerHTML
    previousIndex = 2
  }
  else{
    //Seleccionado distinto de Delegacion
    // Si era un inputtext mantenemos el valor introducido si existia
    valorInputText = document.getElementById("ITentradaNumero").value
    if (actualIndex == 0){
	   // Terminales
       document.getElementById("SPANentradaDato").innerHTML =  InputText6InnerHTML
    }
	else{
	   // Receptores
	   document.getElementById("SPANentradaDato").innerHTML =  InputText5InnerHTML
	}
     // Si no es numérico el valor no se conserva cuando se pasa a un InputText
     if (IsNum(valorInputText)){
        document.getElementById("ITentradaNumero").value = valorInputText;
     }
     previousIndex = actualIndex;
  }
}

// ************************************************************************************************
// Borra el Filtro seleccionado
// ************************************************************************************************
/**
 * @author  : JAS
 */

function limpiarFiltro() {

    var re1 = /&pp_tipo_parametro=\d*/g
    var re2 = /&pp_parametro=[a-zA-Z0-9%]*/g

        
    var nueva_url
    var location_search1
    var location_search2

    //Almacenamos la primera parte de la URL
    nueva_url = location.href.substring(0, location.href.indexOf(location.search,0))   
    
	if (location.search.match(re1)) {
	 //La URL ya contenia pp_tipo_parametro
	 location_search1 = location.search.replace(re1, '')
	}
	else
	{
	 location_search1 = location.search 
	}

	if (location.search.match(re2)) {
	 //La URL ya contenia pp_parametro
	 location_search2 = location_search1.replace(re2, '')
	}
	else
	{
	 location_search2 = location_search1 
	}

	nueva_url = nueva_url + location_search2
	window.location.replace(nueva_url)
	return true
}

// ************************************************************************************************
// Envia el filtro a consultar
// ************************************************************************************************
/**
 * @author  : JAS
 */
 function enviarForm() {

   // Compruebo que el campo sea de 5 digitos en caso de que se esté buscando el 
   // número de receptor y 6 en caso de que se esté buscando el número de terminal.
   var logitudCampoFiltro = (document.getElementById("ITentradaNumero").value).length;
	
   // Terminal
	if (actualIndex == 0){
	   if (logitudCampoFiltro!=6){
	      alert("El campo agente tiene que tener 6 dígitos");  
	      return false;
	   }
	}
	// Receptor
	if (actualIndex == 1){
	   if (logitudCampoFiltro!=5){
	      alert("El campo receptor tiene que tener 5 dígitos"); 
	      return false;
	   }
	}  


    var n
    var t
  
if (document.getElementById("selTipoFiltro") != null)
{
     t=document.getElementById("selTipoFiltro").value
}
else
{ //para los receptores no existe el objeto selTipoFiltro
    t = 1
}
  if (actualIndex != 2){
    n=document.getElementById("ITentradaNumero").value
  }
  else
  {
    n=document.getElementById("ITentradaNumero").selectedIndex
    n=document.getElementById("ITentradaNumero").options[n].value
    n= escape(n)
  }
  if (actualIndex != 2){
    if ((IsNum(n) == false) && (n != "" )) {
		      alert ("Debe introducir un valor numérico.")
		      return false
    }
  }
    var re1 = /&pp_tipo_parametro=\d*/g
    var re2 = /&pp_parametro=[a-zA-Z0-9%]*/g  
  
    var nueva_url
    var location_search1
    var location_search2

    //Almacenamos la primera parte de la URL
    nueva_url = location.href.substring(0, location.href.indexOf(location.search,0))   
    
	if (location.search.match(re1)) {
	 //La URL ya contenia pp_tipo_parametro
	 location_search1 = location.search.replace(re1, '&pp_tipo_parametro=' + t)
	}
	else
	{
	 location_search1 = location.search + '&pp_tipo_parametro=' + t
	}

	if (location.search.match(re2)) {
	 //La URL ya contenia pp_parametro
	 location_search2 = location_search1.replace(re2, '&pp_parametro=' + n)
	}
	else
	{
	 location_search2 = location_search1 + '&pp_parametro=' + n
	}

	nueva_url = nueva_url + location_search2
	window.location.replace(nueva_url)
	return true

}
// FIN PROCESOS COMUNES DEL FILTRO AGENTE, RECEPTOR, DELEGACION


// ************************************************************************************************
// mostrar_combinacion_lluvia: Funcion que muestra, en otra ventana, la combinacion ganadora con el 
// titulo, pasados como parametro
 
// ************************************************************************************************
/**
 * @author  : GVG
 */
function mostrar_combinacion_lluvia(varTitulo, varTexto)
{

  // damos formato a la combinacion del juego lluvia
  varTextoFormateado  = '';
  varInicioSerie = 0;
  varFinSerie = varTexto.length;
      
  varSepEntrada = ',';
  varLongSepEntrada = 1;
  varSeparadorSalida = '&nbsp;&nbsp;&nbsp;&nbsp;';
   
  if (varFinSerie < 1001) { // 100 premios y mostramos en filas de 5
    varPremiosFilas = 5;
  }
  else {
    varPremiosFilas = 10;
  }
      
  while (varFinSerie > varInicioSerie)
  {
    varContPremios = 1; 

    while (varPremiosFilas >= varContPremios )
    {
       varPosSepEntrada = varTexto.indexOf(varSepEntrada, varInicioSerie); //posicion donde estál separador (0) ==> longitud
       if (varPosSepEntrada  == -1) { 
       //ultimo codigo a leer y no finaliza con separador
          varResultado = varTexto.substr(varInicioSerie); //lee lo que queda
       }
       else {
          varResultado = varTexto.substr(varInicioSerie, varPosSepEntrada-varInicioSerie);
       }

       if (varContPremios == varPremiosFilas) {
         varTextoFormateado = varTextoFormateado + varResultado;
       }
       else {
         varTextoFormateado = varTextoFormateado + varResultado + varSeparadorSalida;
       }             

       varInicioSerie = varInicioSerie + varTexto.indexOf(varSepEntrada) + varLongSepEntrada ;
       varContPremios = varContPremios + 1;

    }
    varTextoFormateado =  varTextoFormateado  + '<BR>';
  }


	var lightbox = "<div class='textobasico wysiwyg'><h1>" + varTitulo+ "</h1><p>" + varTextoFormateado + "</p></div>"; 
	var b = jQuery("body");


		jQuery("#idCombinacion").fancybox({		
			'speedIn'		:	600, 
			'speedOut'		:	200, 			
			'width': 350,
			'height': 400,
			'modal': false,			
			'content': lightbox,			
			'centerOnScroll':true,						
			'scrolling': 'auto',
			beforeShow: function(){
				b.css("position","static");
			},
			afterClose: function(){
				b.css("position","relative");	
				jQuery("#fancybox-overlay").hide();			
			},
			onComplete: function(){
				$.fancybox.resize();
			}
		});

}

